<?php declare(strict_types = 1);

namespace Tests\Orisai\Installer\Unit\Loader;

use Orisai\Installer\Loader\LoaderGenerator;
use Orisai\Installer\Modules\Module;
use Orisai\Installer\Modules\Modules;
use Orisai\Installer\Packages\PackageData;
use Orisai\Installer\Schema\ModuleSchema;
use Orisai\VFS\VFS;
use PHPUnit\Framework\TestCase;
use function file_get_contents;
use function str_replace;
use const PHP_EOL;

final class LoaderGeneratorTest extends TestCase
{

	private string $scheme;

	protected function setUp(): void
	{
		parent::setUp();
		$this->scheme = VFS::register();
	}

	protected function tearDown(): void
	{
		parent::tearDown();
		VFS::unregister($this->scheme);
	}

	public function testBase(): void
	{
		$schemaFile = "$this->scheme://dir/test.php";
		$rootSchema = new ModuleSchema();
		$rootSchema->setLoader($schemaFile, 'Foo\Bar');
		$root = $this->createModule($rootSchema, '__root__', '');
		$modules = new Modules($root, []);

		$generator = new LoaderGenerator($modules);
		$generator->generateAndSave();

		self::assertSame(
			<<<'PHP'
<?php

/**
 * phpcs:disable
 */

declare(strict_types=1);

namespace Foo;

use Orisai\Installer\Loader\BaseLoader;

/**
 * Generated by orisai/installer
 */
final class Bar extends BaseLoader
{
	protected array $schema = [];
	protected array $switches = [];
	protected array $modules = ['__root__' => ['dir' => '']];
}

PHP,
			str_replace("\n", PHP_EOL, file_get_contents($schemaFile)),
		);

		$inst = $generator->generate();
		self::assertSame(
			[],
			$inst->loadConfigFiles('/root'),
		);

		self::assertSame(
			[
				'__root__' => [
					'dir' => '/root',
				],
			],
			$inst->loadModulesMeta('/root'),
		);
	}

	public function testNoNamespace(): void
	{
		$schemaFile = "$this->scheme://dir/test.php";
		$rootSchema = new ModuleSchema();
		$rootSchema->setLoader($schemaFile, 'Bar');
		$root = $this->createModule($rootSchema, '__root__', '');
		$modules = new Modules($root, []);

		$generator = new LoaderGenerator($modules);
		$generator->generateAndSave();

		self::assertSame(
			<<<'PHP'
<?php

/**
 * phpcs:disable
 */

declare(strict_types=1);

/**
 * Generated by orisai/installer
 */
final class Bar extends Orisai\Installer\Loader\BaseLoader
{
	protected array $schema = [];
	protected array $switches = [];
	protected array $modules = ['__root__' => ['dir' => '']];
}

PHP,
			str_replace("\n", PHP_EOL, file_get_contents($schemaFile)),
		);

		$inst = $generator->generate();
		self::assertSame(
			[],
			$inst->loadConfigFiles('/root'),
		);

		self::assertSame(
			[
				'__root__' => [
					'dir' => '/root',
				],
			],
			$inst->loadModulesMeta('/root'),
		);
	}

	private function createModule(ModuleSchema $schema, string $name, ?string $path = null): Module
	{
		$path ??= $name;

		return new Module(
			$schema,
			new PackageData($name, [], [], [], __DIR__ . '/' . $path, $path),
		);
	}

}
